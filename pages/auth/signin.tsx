import Link from "next/link";
import styles from "styles/signin.module.scss";
import {
  useSession,
  signIn,
  getProviders,
  getCsrfToken,
} from "next-auth/react";
import { useEffect } from "react";
import { useRouter } from "next/router";
import Title from "../../components/title";
import Head from "next/head";

function SignIn({ providers, csrfToken }) {
  const { data: session } = useSession();
  const router = useRouter();
  console.log("session", session);
  useEffect(() => {
    if (session) router.push("/");
  });

  return (
    <div id={styles.signin}>
      <Head>
        <title>Login</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
        <Title />
        <form
          id={styles.signin_form}
          action='/api/auth/signin/email'
          method='POST'>
          <h2>Sign in</h2>
          <div className={styles.signin_wrapper}>
            <div id={styles.email_wrapper}>
              <input type='hidden' name='csrfToken' defaultValue={csrfToken} />
              <label>
                <input
                  type='text'
                  id='email'
                  name='email'
                  placeholder='you@company.com'
                />
              </label>
              <button id={styles.signin_btn} type='submit'>
                Sign in with email
              </button>
            </div>
            <br />
            <p>or</p>
            <br />
            <button
              className={styles.providers}
              onClick={() => signIn("github")}>
              Sign in with GitHub
            </button>
          </div>
          <div id='register-here'>
            Don&apos;t have an account? | Please{" "}
            <Link href='/register' legacyBehavior>
              register here
            </Link>
          </div>
        </form>
      </main>
    </div>
  );
}

export async function getServerSideProps(context) {
  const token = await getCsrfToken(context);
  console.log("token", token);
  return {
    props: {
      providers: await getProviders(),
      csrfToken: token,
    },
  };
}

export default SignIn;
